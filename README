Simple backup
=============

Tree:
=====

${sysconfdir}/
	sbackup/
		rc.d/		Backup configurations
		samples/	Sample configurations
		backup.daily/	Links to appropriate rc.d scripts
		backup.weekly/	....
		backup.monthly/	....
		

${datadir}/
	sbackup/
		bin/		Main programs
		scripts/	The main backup scripts
		helpers/	Helper scripts



rc.daily:
	00-init.init	// Initialization (?)
	00-nfs.mount	// Mount nfs share

	01-name.mysql	// Mysql backup
	02-name.psql	// Postgresql backup
	03-name.fs	// Filesystem backup
	...


Backup scripts:
===============

Each backup script must have:

functions:
----------
do_help()		A function to display help and return
do_check_conf()		Check whether all configuration variables are ok
			Return: 0: OK, 1: Error
			May display error messages
do_run()		Do the backup

variables:
----------
NAME			The script name ("psql")
VERSION			The script version ("1.0.0")
DESC			A short description ("Backup a postgresql database")

It must return:
---------------
0	Everything were OK
1	Error occured - continue backups
2	Error occured - abort backup sequence

Configuration files:
====================

Some configuration files include a DESTDIR directive.
It may contain the following special sequences:

 * '%D1%' which will be replaced by YYMMDD of the current date
   Example: /tmp/backups/filesystem/%D1%
   will be converted to: /tmp/backups/filesystem/061117 (as of 17 Nov 2006)

Configuration directives:
=========================

Configuration directives should preserve the same names when possible.
Common directives are:

 DESTDIR	Where to backup to
 DATABASES	The databases to backup, for DB backups
 PASSWORD	To hold a password
 .*USER		To hold a username (examples: PGUSER, MYUSER etc..)
 
NOTE! The directive USER should never be used. I repeat NEVER USE THE USER
DIRECTIVE! Same thing applies for other well known directives that may be
set by sh/bash.

Requirements:
=============

 * GNU tar - for the tar method



