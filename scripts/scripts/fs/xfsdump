#!/bin/sh
#
# Copyright (C) 2006 Stefanos Harhalakis
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#
# $Id$
#
# Description
#
#

# The name of the backup script
NAME="xfsdump"
# The version of the script
VERSION="1.0.0"
# A short description of the script
DESC="XFS backup using xfsdump"

# Display help
do_help()
{
	cat << _END
Configuration options:
	LEVEL		The backup level (0-9) (required)
	PARTITIONS	The partitions to backup. This is a space separated
			list of partitions. They can be identified by
			mountpoint or by device name (required)
	MEDLABEL	Media label to be passed to xfsdump (i.e. hostname)	
	DESTDIR		The directory to backup to (required)
_END
	if [ -z "$XFSDUMP" ] ; then
		cat << _END

 !! This method is DISABLED because xfsdump was not found
_END
	fi
}

# Check configuration
# return: 0: ok, 1: error
do_check_conf()
{
	local	tmp

	[ -z "$XFSDUMP" ] && h_error "xfsdump was not found" && return 1

	[ -z "$LEVEL" ] && h_error "Missing LEVEL" && return 1
	[ -z "$PARTITIONS" ] && h_error "Missing PARTITIONS" && return 1
	[ -z "$DESTDIR" ] && h_error "Missing DESTDIR" && return 1

	tmp=`expr $1 + 1 >/dev/null 2>&1 || echo koko`

	[ "$tmp" = "koko" ] && h_error "LEVEL must be a number" && return 1

	if [ "$LEVEL" -lt 0 ] || [ "$LEVEL" -gt 9 ] ; then
		h_error "LEVEL must be in the range 0-9"
		return 1
	fi

	return 0
}

# Do the dump
#	$1:	Mount point / partition
#	$2:	Filename
do_dump()
{
	local	T_M

	if [ -z "$XFSDUMP" ] ; then
		h_error "xfsdump was not found"
		return 1
	fi

	T_M="-M '$MEDLABEL'"

	if ! $XFSDUMP -l $LEVEL $T_M -L "$1" -f $2 "$1" ; then
		return 1
	fi
}

# Do backup
do_run()
{
	h_formdest "$DESTDIR"
	h_ensuredestdir "$R_DESTDIR"

	for part in $PARTITIONS ; do
		FN=`echo "${part}" | sed s,^/,, | sed s,/,.,g`
		if ! do_dump $part $R_DESTDIR/$FN ; then
			h_error "Backup of $part failed"
			return 1
		fi
	done
}

